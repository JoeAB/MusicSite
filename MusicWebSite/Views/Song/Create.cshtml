@model MusicWebSite.ViewModels.Song.CreateSongViewModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>SongViewModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="song.name" class="control-label"></label>
                <input asp-for="song.name" class="form-control" />
                <span asp-validation-for="song.name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="song.filePath" class="control-label"></label>
                <input asp-for="song.filePath" class="form-control" />
                <span asp-validation-for="song.filePath" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="song.releaseDate" class="control-label"></label>
                <input asp-for="song.releaseDate" class="form-control" />
                <span asp-validation-for="song.releaseDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="artistID" type="hidden" />
            </div>
            <div class="form-group">
                <select asp-for="genreID" asp-items="@(new SelectList(Model.genreList,"id","name"))">
                    <option>Select a Genre</option>
                </select>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-controller="Artist" asp-action="View" asp-route-id="@Model.artistID">Back to Artist Info</a>
</div>

